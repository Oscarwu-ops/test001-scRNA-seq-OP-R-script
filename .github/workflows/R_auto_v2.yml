name: r-pipeline
on:
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Show repo tree (before extract)
        run: |
          echo "Top-level files:"; ls -lah

      # ★★ 先把 GSE*_RAW.tar 解到 data/，再遞迴解巢狀壓縮 ★★
      - name: Extract GEO RAW to data/
        run: |
          set -euo pipefail
          mkdir -p data
          shopt -s nullglob
          for f in *.tar *_RAW.tar; do
            echo "[extract] $f -> data/"
            tar -xf "$f" -C data
          done

          # 遞迴解所有巢狀的 tar/tgz/zip，直到沒有新的壓縮檔
          rounds=0
          while true; do
            rounds=$((rounds+1))
            found=$(find data -type f \( -name "*.tar" -o -name "*.tar.gz" -o -name "*.tgz" -o -name "*.zip" \) | wc -l)
            echo "[round $rounds] archives to extract: $found"
            [ "$found" -eq 0 ] && break
            while IFS= read -r a; do
              echo "  -> $a"
              case "$a" in
                *.zip) unzip -o "$a" -d "$(dirname "$a")" >/dev/null ;;
                *.tar|*.tar.gz|*.tgz) tar -xf "$a" -C "$(dirname "$a")" ;;
              esac
              # 可視需要刪掉原壓縮，節省空間：
              # rm -f "$a"
            done < <(find data -type f \( -name "*.tar" -o -name "*.tar.gz" -o -name "*.tgz" -o -name "*.zip" \))
            [ "$rounds" -ge 5 ] && break   # 保障不會無限迴圈
          done

          echo "Search *_matrix*.mtx.gz after extract:"
          find data -type f -name "*_matrix*.mtx.gz" -printf "%p\t%s bytes\n" | head -n 50 || true

      - name: Set up R (binary + cache)
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Restore R deps (main only)
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::Seurat
            any::SeuratObject
            any::patchwork
            any::readr
            any::dplyr
            any::ggplot2
            any::matrixStats
            any::optparse
            any::future
            any::glmGamPoi

      - name: Run R script (QUICK mode)
        env:
          DATA_DIR: data        # ★ 解到 data/，讓 R 從這裡遞迴找
          OUTPUT_DIR: docs
          QUICK: "1"            # 先用抽樣快速驗證
          STRICT_FAIL: "0"
        run: |
          mkdir -p docs
          Rscript scRNA_OCP_full_pipeline.R \
            --data_dir "${DATA_DIR}" \
            --out_dir  "${OUTPUT_DIR}" 2>&1 | tee docs/run.log

      - name: Print summary if present
        run: |
          test -f docs/_summary.json && (echo "===== SUMMARY ====="; cat docs/_summary.json) || echo "No summary."

      - name: Upload artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scRNA_results
          path: docs




